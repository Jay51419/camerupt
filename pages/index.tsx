import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from 'react'
import { useAtom, atom } from 'jotai'
const handleGet = async (id?: string) => {
  const data = await fetch("/api/wishlist", {
    method: "GET",
    headers: {
      'Content-Type': 'application/json'
    },
  })
  return data
}
const handleAdd = async (name: string) => {
  const data = await fetch("/api/wishlist", {
    method: "POST",
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ name })
  })
  return data
}
const handleDelete = async (id: string) => {
  const data = await fetch("/api/wishlist", {
    method: "DELETE",
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ id })
  })
}
const handleUpdate = async (id: string, name: string) => {
  const data = await fetch("/api/wishlist", {
    method: "PUT",
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ id, name })
  })
  return data
}

interface WishList {
  id: string,
  name: string,
}

const wishlist = atom<any[]>([])

export default function Home() {
  const [name, setName] = useState("")
  const [data, setData] = useAtom(wishlist)
  useEffect(() => {
    handleGet()
      .then(async res => setData(await res.json()))
      .catch(err => console.error(err))
  }, [])
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div>
          <input min={1} type="text" onChange={e => setName(e.target.value)} value={name} />
          <button onClick={() => {
            if (name.length !== 0) {
              handleAdd(name)
                .then(async res => console.log(await res.json()))
                .then(e => setName(""))
                .then(e => (
                  handleGet()
                    .then(async res => setData(await res.json()))
                    .catch(err => console.error(err))
                )
                )

            }
          }
          }>Add</button>
        </div>
        <div>
          <ul>
            {
              data.map(wish => <WishlistCard key={wish.id} id={wish.id} name={wish.name} />
              )
            }
          </ul>
        </div>
      </main>
    </>
  )
}


const WishlistCard = ({ id, name }: { id: string, name: string }) => {
  const [data, setData] = useAtom(wishlist)
  const [updateName, setUpdateName] = useState(name)
  const [showUpdateBtn, setShowUpdateBtn] = useState(false)

  return <li key={id} >
    {!showUpdateBtn ? name : <input type="text" min={1} value={updateName} onChange={e => setUpdateName(e.target.value)} />}
    {
      !showUpdateBtn && <button onClick={() => {
        handleDelete(id).then(_ => {
          handleGet()
            .then(async res => setData(await res.json()))
            .catch(err => console.error(err))
        })
      }}>delete</button>
    }

    {!showUpdateBtn && <button onClick={() => {
      setShowUpdateBtn(true)
    }}>
      update
    </button>}
    {showUpdateBtn && <button onClick={() => {
      if (updateName.length !== 0) {
        handleUpdate(id, updateName).then(_ => {
          handleGet()
            .then(async res => setData(await res.json()))
            .catch(err => console.error(err))
        }).then(_ => setShowUpdateBtn(false))
      }
    }}>
      okay
    </button>}
    {showUpdateBtn && <button onClick={() => {
      setShowUpdateBtn(false)
    }}>
      cancel!!!!!
    </button>}
  </li>
}